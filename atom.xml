<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pinjun Zheng&#39;s Page</title>
  <icon>https://www.gravatar.com/avatar/00b94cd35449c4c92db83df66fb0ac98</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zpinjun.github.io/main/"/>
  <updated>2020-06-09T15:22:48.041Z</updated>
  <id>https://zpinjun.github.io/main/</id>
  
  <author>
    <name>Pinjun Zheng</name>
    <email>zhengpinjun@126.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A Novel Phase Retrieval Algorithm for Parameterized Signal</title>
    <link href="https://zpinjun.github.io/main/2020/06/09/20200609-parameterizedPR/"/>
    <id>https://zpinjun.github.io/main/2020/06/09/20200609-parameterizedPR/</id>
    <published>2020-06-09T14:33:21.000Z</published>
    <updated>2020-06-09T15:22:48.041Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Using the notation $[n]_k:=\{k,k+1,\dots,k+n-1\}$，specially，$[n]:=[n]_0$. And the notation $\widehat{\mathbf{X}_N}$ represents $N$ point DFT of $\mathbf{x}$.</p><p>In phase Fourier retrieval problem, we consider taht original signal $\mathbf{s}\in\mathbb{C}^M$，and measurement $\mathbf{y}\in\mathbb{R}^N$. The following relationship is satisfied between the two signal:<br>    \begin{equation}<br>        \mathbf{y}[n] = | \widehat{\mathbf{S}_N}[n] |^2, \forall n\in[N].<br>    \end{equation}<br>The goal of the phase retrieval problem is to reconstruct $\mathbf{s}$ from $\mathbf{y}$.</p><p>In this study we assume that the original signal conforms to the form $s(t)=\sum\limits_{k=1}^Kc_kh(t-t_k)$. In discrete form, $\mathbf{s}[m]=\sum\limits_{k=1}^Kc_k\mathbf{h}[m-m_k], \forall m\in [M]$. Because this kind of signal is completely determined by a limited number of parameters, we call it a parameterized signal. Under this assumption, recovering the original signal is equivalent to recovering $2K$ parameters $\{c_1,c_2,\dots,c_K\}$ and $\{m_1,m_2,\dots,m_K\}$. </p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>At present, we have completed a super-linear convergence iterative algorithm to solve the amplitude parameters.  However, for delay parameters, most of the traditional methods are based on search algorithms.  The disadvantage of this kind of method is that it will generate a huge amount of calculation for large-scale signals, and we next want to focus on avoiding this problem.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Using the notation $[n]_k:=\{k
      
    
    </summary>
    
    
    
      <category term="Research" scheme="https://zpinjun.github.io/main/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>A Phase Retrieval Framework under Local Multiplicative Noise</title>
    <link href="https://zpinjun.github.io/main/2020/06/09/20200609-maskPR/"/>
    <id>https://zpinjun.github.io/main/2020/06/09/20200609-maskPR/</id>
    <published>2020-06-09T08:36:52.000Z</published>
    <updated>2020-06-09T09:26:10.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Although most phase recovery algorithms have good robustness to additive noise, when multiplicative noise is present, the reconstruction accuracy will be reduced. However, in some cases, the magnitude measurement is often accompanied by local multiplicative noise. For example, in X-ray or electron diffraction experiments, the signal in the central part of the diffraction pattern is often missing due to a beamstop, or is overexposed due to a direct beam, or a hole in the detector, which is called the missing data problem. Some solutions by improving instrument setting were proposed to confine the missing data within the centrospeckle. The missing data problem can be equivalent to a local multiplicative noise (zero intensity) in the central area of the diffraction pattern, resulting in the data missing. In this paper, we consider general case of local multiplicative noise in magnitude measurement, and we proposed a effective measurement framework to obtain pure data for phase retrieval under local multiplicative noise.  Then based on DFT frequency domain cyclic shift theorem and the phase mask technique, our proposed method can be divided into three steps: </p><ol><li>Determine the noise boundary</li><li>Extract pure measurement data</li><li>Implement phase recovery</li></ol><h1 id="Phase-Mask-Technique"><a href="#Phase-Mask-Technique" class="headerlink" title="Phase Mask Technique"></a>Phase Mask Technique</h1><div style="width:70%;margin:auto"><img src="/2020/06/09/20200609-maskPR/2020-06-09_164238.png" class title="image"></div><p>Mask technique is widely used in the fields of optics, image encryption, microscopic imaging, and speech signal processing, etc. There are many methods for generating a phase mask, for example ,a designed phase mask can be encoded in a computer-generated off-axis hologram and is applied on a Spatial Light Modulator (SLM) which already has a hologram with the lens function. By introducing the designed phase mask, we can achieve the cyclic shift measurement process.</p><h1 id="Determine-the-Noise-Boundary"><a href="#Determine-the-Noise-Boundary" class="headerlink" title="Determine the Noise Boundary"></a>Determine the Noise Boundary</h1><div style="width:100%;margin:auto"><img src="/2020/06/09/20200609-maskPR/2020-06-09_164313.png" class title="image"></div><p>To determine the boundary of local multiplicative noise, first we perform two magnitude measurements (with a shift difference through phase mask technique) on the original signal. Then we do reverse cyclic shift, and calculate absolute difference. by binarizing this absolute difference, we can determine the boundary of noise.</p><h1 id="Extract-Pure-Measurement-Data"><a href="#Extract-Pure-Measurement-Data" class="headerlink" title="Extract Pure Measurement Data"></a>Extract Pure Measurement Data</h1><div style="width:100%;margin:auto"><img src="/2020/06/09/20200609-maskPR/2020-06-09_164328.png" class title="image"></div><p>Since we have obtained the noise boundary, we can shift the interest measurements to the noise-free area by cyclic shift and record it until all needed data are measured.</p><h1 id="Overall-Framework"><a href="#Overall-Framework" class="headerlink" title="Overall Framework"></a>Overall Framework</h1><div style="width:100%;margin:auto"><img src="/2020/06/09/20200609-maskPR/2020-06-09_164350.png" class title="image"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Although most phase recovery a
      
    
    </summary>
    
    
    
      <category term="Research" scheme="https://zpinjun.github.io/main/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>A Measurement Fault Elimination Method in 1D Fourier Phase Retrieval</title>
    <link href="https://zpinjun.github.io/main/2020/06/09/I2MTC-paper/"/>
    <id>https://zpinjun.github.io/main/2020/06/09/I2MTC-paper/</id>
    <published>2020-06-09T02:32:06.000Z</published>
    <updated>2020-06-09T15:37:29.340Z</updated>
    
    <content type="html"><![CDATA[<p>This research was published in 2020 IEEE International Instrumentation &amp; Measurement Technology Conference (I2MTC), May 2020.</p><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>This paper proposes a measurement fault elimination method applied to Fourier phase retrieval. In the phase retrieval problem, if the diffraction pattern is partially measured incorrectly, the accuracy of reconstruction results will be reduced. This paper considers one-dimensional Fourier phase retrieval and proposes a method that can search the faulty measurements out by comparing Fourier magnitude of different oversampling multiples, thus is possible to filter out pixels that are not working properly in the detector to improve the reconstruction algorithm. Numerical experiments show that the method proposed in this paper can effectively eliminate the influence of faulty measurement and obtain accurate reconstruction.</p><h1 id="Presentation"><a href="#Presentation" class="headerlink" title="Presentation"></a>Presentation</h1><iframe height="400" width="600" src="http://qbj9a4vk0.bkt.clouddn.com/1570616317.mp4" frameborder="0" 'allowfullscreen'></iframe> ]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This research was published in 2020 IEEE International Instrumentation &amp;amp; Measurement Technology Conference (I2MTC), May 2020.&lt;/p&gt;
&lt;h1
      
    
    </summary>
    
    
    
      <category term="Research" scheme="https://zpinjun.github.io/main/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>ZYNQ-based Airborne AC Multi-channel Parallel Data Acquisition and Processing Board</title>
    <link href="https://zpinjun.github.io/main/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/"/>
    <id>https://zpinjun.github.io/main/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/</id>
    <published>2019-10-08T11:49:48.000Z</published>
    <updated>2020-06-09T15:35:02.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Among the various electrical parameters of airborne AC, the voltage effective value (rms value) of steady-state AC voltage is an extremely important parameter. There are strict international standards for measuring the effective value of airborne AC. Our project is carried out with reference to the ISO 12384 standard. The main features of airborne AC voltage acquisition task are: </p><ul><li>Multiple acquisition channels</li><li>High sampling frequency requirements</li><li>strict synchronization requirements </li><li>Equipment miniaturization requirements</li></ul><p>Considering that the complete test system also needs to measure other parameters, which will result in a large computing power load, we want to develop a lower computer circuit to undertake the multi-channel airborne AC rms measurement task to reduce the burden on the upper computer.</p><h1 id="Technical-Requirements"><a href="#Technical-Requirements" class="headerlink" title="Technical Requirements"></a>Technical Requirements</h1><ul><li>Equipment area is not less than 200 mm × 180 mm, height is not more than 100 mm.</li><li>The sampling rate of the single voltage acquisition channel is not less than 100 ksps, and the sampling time is not more than 1s. The data bit width is not less than 14 bits.</li><li>The voltage rms error does not exceed 0.5%.</li><li>The number of acquisition channels is not less than 64, and the data of all the channels need to be acquired synchronously.</li><li>The processed data is output using the standard RS 422 interface.</li></ul><h1 id="Overall-Design"><a href="#Overall-Design" class="headerlink" title="Overall Design"></a>Overall Design</h1><h3 id="Hardware-Design"><a href="#Hardware-Design" class="headerlink" title="Hardware Design"></a>Hardware Design</h3><div style="width:70%;margin:auto"><img src="/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/2020-06-08_201007.png" class title="image"></div><p>The circuit hardware is mainly divided into the following four modules:</p><ul><li>Multi-channel data acquisition module</li><li>ZYNQ core board main control module</li><li>Data export module</li><li>Power supply module</li></ul><h3 id="Software-Design"><a href="#Software-Design" class="headerlink" title="Software Design"></a>Software Design</h3><p>The ZYNQ chip used in this project is a all programmable SoC, which equipped with dual-core ARM Cortex-A9 processors (PS) and Kintex®-7 based programmable logic (PL). We use Verilog language to program PL part to control multiple AD chips to complete the parallel acquisition and data stream transmission task of instantaneous voltage. Use the C language to develop the PS part to complete the calculation of the effective value. The logic of the PL part is packaged into an IP core through the VIVADO software, and the ARM program controls the work of these IPs by reading and writing custom registers. The following figure shows the logical state machine of one of the IP cores:</p><img src="/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/2020-06-08_223915.png" class title="image"><p>The overall operation process of the software is shown in the following figure:<br><img src="/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/2020-06-08_201345.png" class title="image"></p><ol><li>The ARM processor sends a PS_en rising edge trigger to the data master IP.</li><li>The data master IP works, data is sampled and sent into the FIFO, which loop 1000 times.</li><li>The data master IP sends PS_acquiDataOver to the ARM processor. </li><li>The ARM processor starts the DMA transfer channel. </li><li>The DMA controller transfers the data in the FIFO to the DDR memory. </li><li>The DMA controller sends a signal to the ARM processor that the transfer is complete. </li><li>The ARM processor reads data from the DDR memory.</li><li>The ARM processor performs effective value calculation and exports the result to IP through RS422.</li></ol><h1 id="Product-amp-Test"><a href="#Product-amp-Test" class="headerlink" title="Product &amp; Test"></a>Product &amp; Test</h1><img src="/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/2020-06-08_201745.png" class title="image"><img src="/2019/10/08/20200608-%E6%9C%AC%E7%A7%91%E6%AF%95%E8%AE%BE/2020-06-08_201852.png" class title="image"><ul><li>Single channel sampling rate is 167.79 ksps.</li><li>the average time for any channel of the board to complete a data acquisition and calculation process is about 6.590 ms.</li><li>The effective value acquisition error does not exceed 0.4%.</li><li>The power consumption of the whole board is about 7.98 W.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Among the various electrical p
      
    
    </summary>
    
    
    
      <category term="Project" scheme="https://zpinjun.github.io/main/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title>Embedded Tetris game based on FPGA and VGA protocol</title>
    <link href="https://zpinjun.github.io/main/2019/08/01/20200427-%E5%A8%81%E6%B5%B7%E6%9A%91%E6%9C%9F%E5%AD%A6%E6%A0%A1%E7%BA%AA%E5%AE%9E/"/>
    <id>https://zpinjun.github.io/main/2019/08/01/20200427-%E5%A8%81%E6%B5%B7%E6%9A%91%E6%9C%9F%E5%AD%A6%E6%A0%A1%E7%BA%AA%E5%AE%9E/</id>
    <published>2019-08-01T08:23:32.000Z</published>
    <updated>2020-06-09T00:46:23.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Summer-Project-of-Measurement-and-Control"><a href="#Summer-Project-of-Measurement-and-Control" class="headerlink" title="Summer Project of Measurement and Control"></a>Summer Project of Measurement and Control</h1><p>We take part in 2019 summer project of measurement and control in Weihai, China. See details about <a href="http://tce.hit.edu.cn/news/1488" target="_blank" rel="noopener">Admission Notice</a> 、<a href="https://www.hitwh.edu.cn/2019/0715/c1307a110158/page.htm" target="_blank" rel="noopener">News</a> and <a href="https://a.eqxiu.com/s/CEA14EuC?eqrcode=1&amp;share_level=5&amp;from_user=202004275378cf24&amp;from_id=8f96cfe4-c&amp;share_time=1587953016799&amp;from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">Brochure</a>。</p><p>This year’s summer project is held in Weihai, from July 14th to July 26th.  I submitted the registration form on June 25 and received the admission notice on July 4.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/08/01/20200427-%E5%A8%81%E6%B5%B7%E6%9A%91%E6%9C%9F%E5%AD%A6%E6%A0%A1%E7%BA%AA%E5%AE%9E/1.jpg" alt="录取" title>                </div>                <div class="image-caption">录取</div>            </figure><h1 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h1><p>We have to form a team of 3 to 4 people to develop a complete work in a week.  Fortunately, my good friends Y. and P. were at the time, so we successfully formed an efficient team.</p><p>The title of the project we selected is “Embedded Tetris game based on FPGA and VGA protocol”. We use a Xilinx development board provided by the organizer, using VIVADO software and Verilog language for development. Unlike other software programming, we use FPGA to develop game logic, use five buttons on the development board as input to control the movement and rotation of Tetris, and the output is connected to the display using a VGA bus.  We use the VGA protocol to control the output logic to make the display screen display what we want to display. Our project references <a href="https://github.com/rfotino/verilog-tetris" target="_blank" rel="noopener">this</a> open source project. On the basis of the existing we have added several new functions:</p><ul><li>Display the next Tetris in the upper left corner of the interface.</li><li>Display the current score in the upper right corner of the interface (the original project is to display the score on the development board with a digital tube).</li><li>The opening image is displayed at the beginning of the game, and the ending image is displayed at the end of the game.</li></ul><p>Our project can be found on my <a href="https://github.com/ZPinjun/Tetris-base-on-FPGA-VGA" target="_blank" rel="noopener">Github</a> and <a href="https://download.csdn.net/download/qq_39065549/12168594" target="_blank" rel="noopener">CSDN</a>.</p><p>The difficulty of the work we do is the display of images.  Because VGA controls the three RGB color channels in the form of dot matrix scanning, it is relatively easy to implement regular geometric figures such as squares.  To display the image in hardware language, we must first store the digital image information in RAM, and then send it to the VGA bus according to the mapping relationship during display.  In order to achieve this, we first use the drawing tool to design the image we want to display, and then use Matlab to read the information of the digital image, convert the information of each pixel into a binary number, and then follow a certain order (three channels separate,  The sequence is R&gt;G&gt;B. Each channel is scanned line by line, from top to bottom.). Write it to the .txt file according to the format of the .coe file, and finally change the suffix to .coe to obtain the storage information recognized by VIVADO. Then integrate the module into the project. Before the game starts, first output the image information in the .coe file to the VGA. Note that it must be output strictly in the order set before.</p><p>Fortunately, our work was finally rated as an excellent work. The following is a display taken at the time:</p><iframe height="400" width="600" src="https://player.youku.com/embed/XNDY1MDI1MzMwNA==" frameborder="0" 'allowfullscreen'></iframe> <p><img src="/2019/08/01/20200427-%E5%A8%81%E6%B5%B7%E6%9A%91%E6%9C%9F%E5%AD%A6%E6%A0%A1%E7%BA%AA%E5%AE%9E/2.jpg" alt="展示"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Summer-Project-of-Measurement-and-Control&quot;&gt;&lt;a href=&quot;#Summer-Project-of-Measurement-and-Control&quot; class=&quot;headerlink&quot; title=&quot;Summer Pro
      
    
    </summary>
    
    
    
      <category term="Project" scheme="https://zpinjun.github.io/main/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title>A Handheld Medical Terminal Development Based on Qt</title>
    <link href="https://zpinjun.github.io/main/2018/08/09/20200609-neusoft/"/>
    <id>https://zpinjun.github.io/main/2018/08/09/20200609-neusoft/</id>
    <published>2018-08-09T04:05:43.000Z</published>
    <updated>2020-06-09T15:34:20.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>2018.7.16—2018.7.26, a short-term internship at Neusoft Group Co., Ltd. We developed a integrated software based on Qt for a handheld device for doctors to manage and monitor the patients’ physiological data, e.g. blood pressure and glucose level. My main job is to program with Qt to collect and visualize data from handheld devices in real time.</p><h1 id="Product"><a href="#Product" class="headerlink" title="Product"></a>Product</h1><p>Login interface:</p><div style="width:70%;margin:auto"><img src="/2018/08/09/20200609-neusoft/1.png" class title="image"></div><p>Main interface:</p><div style="width:70%;margin:auto"><img src="/2018/08/09/20200609-neusoft/2.png" class title="image"></div><p>Patient information query interface:</p><div style="width:70%;margin:auto"><img src="/2018/08/09/20200609-neusoft/3.png" class title="image"></div><p>Patient blood pressure data query and visualization:</p><div style="width:70%;margin:auto"><img src="/2018/08/09/20200609-neusoft/4.png" class title="image"></div><div style="width:70%;margin:auto"><img src="/2018/08/09/20200609-neusoft/5.png" class title="image"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;2018.7.16—2018.7.26, a short-t
      
    
    </summary>
    
    
    
      <category term="Internship" scheme="https://zpinjun.github.io/main/tags/Internship/"/>
    
  </entry>
  
</feed>
